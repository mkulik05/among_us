const Telegraf = require('telegraf')
const Extra = require('telegraf/extra')
const Markup = require('telegraf/markup')
const bot = new Telegraf("1448775683:AAHYrTikXlvfJfMyvAkc34MCd9007-wuC8Q")

const keyboard = Markup.inlineKeyboard([
  Markup.callbackButton('1', '1'),
  Markup.callbackButton('2', '2'),
  Markup.callbackButton('3', '3'),
  Markup.callbackButton('4', '4'),

])
let tasks = {}
let players = []
is_imposter = {}
bot.start((ctx) => {

  if (!players.includes(ctx.chat.id)) {
    players.push(ctx.chat.id)
    tasks[ctx.chat.id] = []
    console.log(players)
  }
 
  return ctx.reply('–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ä–æ–ª—å', Markup
    .keyboard([
      ['–ò–º–ø–æ—Å—Ç–µ—Ä', '–ú–∏—Ä–Ω—ã–π'],
    ]).oneTime().resize().extra()
    )
  })

bot.help((ctx) => ctx.reply('Help message'))


bot.hears('–ò–º–ø–æ—Å—Ç–µ—Ä', (ctx) => {
  is_imposter[ctx.chat.id] = 1
  return ctx.reply('–•–æ—Ä–æ—à–æ', Markup
  .keyboard([
    ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
    ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
    ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
  ]).oneTime().resize().extra()

)
})

bot.hears('–ú–∏—Ä–Ω—ã–π', (ctx) => {
  is_imposter[ctx.chat.id] = 0
  return ctx.reply('–•–æ—Ä–æ—à–æ', Markup
  .keyboard([
    ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
    ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
    ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
  ]).oneTime().resize().extra()

)
})

bot.hears('–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂', (ctx) => {
if (is_imposter[ctx.chat.id]) {
  for (let i = 0; i< players.length; i++){
    bot.telegram.sendMessage(players[i], "–°–∞–±–æ—Ç–∞–∂!!!!!!", Markup
    .keyboard([
      ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
      ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
      ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
    ]).oneTime().resize().extra())
  }
//   return ctx.reply('–ü—Ä–∏–Ω—è—Ç–æ, –∏–º–ø–æ—Å—Ç–µ—Ä', Markup
//   .keyboard([
//     ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
//     ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
//     ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
//   ]).oneTime().resize().extra()

// )
} else {
  return ctx.reply('–¢—ã –Ω–µ –∏–º–ø–æ—Å—Ç–µ—Ä!!!', Markup
  .keyboard([
    ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
    ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
    ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
  ]).oneTime().resize().extra()

)
}
})


bot.hears('üì¢ —Ä–µ–ø–æ—Ä—Ç', (ctx) => {
  console.log(ctx.message.from.first_name)
  for (let i = 0; i< players.length; i++){
    bot.telegram.sendMessage(players[i], ctx.message.from.first_name + " " + ctx.message.from.last_name+" –æ—Ç–ø—Ä–∞–≤–∏–ª(–∞) —Ä–µ–ø–æ—Ä—Ç!!!", Markup
    .keyboard([
      ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
      ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
      ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
    ]).oneTime().resize().extra())
  }
  return ctx.reply('–ü—Ä–∏–Ω—è—Ç–æ'), Markup
  .keyboard([
    ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
    ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
    ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
  ]).oneTime().resize().extra()
})

let points = 0

let actions = ['1','2','3','4']
bot.action('1', (ctx) => {
  id = ctx.chat.id.toString()
  if (Object.keys(tasks).includes(id)) {
    if (!tasks[id].includes(actions[0])) {
      tasks[id].push(actions[0])
      points+=1
      console.log(tasks, points)
    }else {
      return ctx.reply('–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ!!!', Markup
      .keyboard([
        ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
        ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
        ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
      ]).oneTime().resize().extra())
    }
  } else {
    tasks[id] = [actions[0]]
    players.push(id)
  }
  return ctx.reply('–ó–∞–ø–∏—Å–∞–Ω–æ', Markup
  .keyboard([
    ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
    ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
    ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
  ]).oneTime().resize().extra())
})

bot.action('2', (ctx) => {
  id = ctx.chat.id.toString()
  if (Object.keys(tasks).includes(id)) {
    if (!tasks[id].includes(actions[1])) {
      tasks[id].push(actions[1])
      points+=1
      console.log(tasks, points)
    }else {
      return ctx.reply('–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ!!!', Markup
      .keyboard([
        ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
        ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
        ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
      ]).oneTime().resize().extra())
    }
  } else {
    tasks[id] = [actions[1]]
    players.push(id)
  }
  return ctx.reply('–ó–∞–ø–∏—Å–∞–Ω–æ'), Markup
  .keyboard([
    ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
    ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
    ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
  ]).oneTime().resize().extra()
})
bot.action('3', (ctx) => {
  id = ctx.chat.id.toString()
  if (Object.keys(tasks).includes(id)) {
    if (!tasks[id].includes(actions[2])) {
      tasks[id].push(actions[2])
      points+=1
      console.log(tasks, points)
    }else {
      return ctx.reply('–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ!!!', Markup
      .keyboard([
        ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
        ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
        ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
      ]).oneTime().resize().extra())
    }
  } else {
    tasks[id] = [actions[2]]
    players.push(id)
  }
  return ctx.reply('–ó–∞–ø–∏—Å–∞–Ω–æ', Markup
  .keyboard([
    ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
    ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
    ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
  ]).oneTime().resize().extra())

})
bot.action('4', (ctx) => {
  id = ctx.chat.id.toString()
  if (Object.keys(tasks).includes(id)) {
    if (!tasks[id].includes(actions[3])) {
      tasks[id].push(actions[3])
      points+=1
      console.log(tasks, points)
    } else {
      return ctx.reply('–í—ã —É–∂–µ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ!!!', Markup
      .keyboard([
        ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
        ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
        ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
      ]).oneTime().resize().extra())
    }
  } else {
    tasks[id] = [actions[3]]
    players.push(id)
  }
return ctx.reply('–ó–∞–ø–∏—Å–∞–Ω–æ', Markup
.keyboard([
  ['–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏'],
  ['üì¢ —Ä–µ–ø–æ—Ä—Ç'],
  ['–°–¥–µ–ª–∞—Ç—å —Å–∞–±–æ—Ç–∞–∂']
]).oneTime().resize().extra())  

})

bot.hears('–ó–∞—è–≤–∏—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏', (ctx) => {
  ctx.reply("–ö–∞–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏?",Extra.markup(keyboard))

})


bot.launch() 